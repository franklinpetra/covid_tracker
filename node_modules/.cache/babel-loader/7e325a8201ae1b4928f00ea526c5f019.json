{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/covid_tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData = initialDailyData();\n    };\n\n    fetchAPI();\n  }, []);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: 'red',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'black',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }) : null;\n  const lineChart = dailyData.length ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(({\n          confirmed\n        }) => confirmed),\n        label: 'Infected',\n        borderColor: 'red',\n        fill: true\n      }, {\n        data: dailyData.map(({\n          deaths\n        }) => deaths),\n        label: 'Deaths',\n        borderColor: 'black',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }, \"Chart\"));\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/covid_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","dailyData","setDailyData","fetchMyAPI","initialDailyData","fetchAPI","barChart","confirmed","labels","map","date","datasets","data","label","borderColor","fill","deaths","lineChart","length"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMQ,UAAU,GAAG,YAAY;AAC3B,YAAMC,gBAAgB,GAAG,MAAMR,cAAc,EAA7C;AAEAM,MAAAA,YAAY,GAAIE,gBAAgB,EAAhC;AACH,KAJD;;AAMAC,IAAAA,QAAQ;AACX,GARQ,EAQP,EARO,CAAT;AAUA,QAAMC,QAAQ,GACVC,SAAS,gBACL,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFC,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEF,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPM,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMP;AACCH,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,OAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OANO;AAFR,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAiBP,IAlBN;AAoBA,QAAME,SAAS,GACXhB,SAAS,CAACiB,MAAV,gBAEI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFV,MAAAA,MAAM,EAAEP,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEF,UAAAA;AAAF,SAAD,KAAmBA,SAAjC,CADC;AAEPM,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,WAAW,EAAE,KAHN;AAIPC,QAAAA,IAAI,EAAE;AAJC,OAAD,EAMP;AACCH,QAAAA,IAAI,EAAEX,SAAS,CAACQ,GAAV,CAAc,CAAC;AAAEO,UAAAA;AAAF,SAAD,KAAgBA,MAA9B,CADP;AAECH,QAAAA,KAAK,EAAE,QAFR;AAGCC,QAAAA,WAAW,EAAE,OAHd;AAICC,QAAAA,IAAI,EAAE;AAJP,OANO;AAFR,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAkBE,IAnBN;AAwBA,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,CADJ;AAKH,CA9DD;;AAgEA,eAAef,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from \"./Chart.module.css\";\n\nconst Chart = () => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n            const initialDailyData = await fetchDailyData();\n            \n            setDailyData = (initialDailyData());\n        };\n\n        fetchAPI();\n    },[]);\n\n    const barChart = (\n        confirmed ? (\n            <Line\n            data={{\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label: 'Infected',\n                    borderColor: 'red',\n                    fill: true,\n\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'black',\n                    fill: true, \n                }],\n        }}\n    />) : null\n    );\n    const lineChart = (\n        dailyData.length\n            ? (\n            <Line\n            data={{\n                labels: dailyData.map(({ date }) => date),\n                datasets: [{\n                    data: dailyData.map(({ confirmed }) => confirmed),\n                    label: 'Infected',\n                    borderColor: 'red',\n                    fill: true,\n\n                }, {\n                    data: dailyData.map(({ deaths }) => deaths),\n                    label: 'Deaths',\n                    borderColor: 'black',\n                    fill: true, \n                }],\n        }}\n    />) : null\n    );\n\n\n\n    return (\n        <div>\n            <h1>Chart</h1>\n        </div>\n    )\n}\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}