{"ast":null,"code":"var _jsxFileName = \"/Users/petrafranklin/Coding_DoJo/mern/Assignments/covid_tracker/src/components/Chart/Chart.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({\n  data: {\n    confirmed,\n    recovered,\n    deaths\n  },\n  country\n}) => {\n  const [dailyData, setDailyData] = useState({});\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n      setDailyData(initialDailyData);\n    };\n\n    fetchMyAPI();\n  }, []);\n  const barChart = confirmed ? /*#__PURE__*/React.createElement(Bar, {\n    data: {\n      labels: ['Infected', 'Recovered', 'Deaths'],\n      datasets: [{\n        label: 'People',\n        backgroundColor: [\"red\", \"green\", \"grey\"],\n        data: [confirmed.value, recovered.value, deaths.value]\n      }]\n    },\n    options: {\n      legend: {\n        display: false\n      },\n      title: {\n        display: true,\n        text: `Current State in ${country}`\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }) : null;\n  const lineChart = dailyData[0] ? /*#__PURE__*/React.createElement(Line, {\n    data: {\n      labels: dailyData.map(({\n        date\n      }) => date),\n      datasets: [{\n        data: dailyData.map(data => data.confirmed),\n        label: 'Infected',\n        backgroundColor: 'red',\n        borderColor: 'black',\n        fill: true\n      }, {\n        data: dailyData.map(data => data.deaths),\n        label: 'Deaths',\n        borderColor: 'darkGrey',\n        backgroundColor: 'darkGrey',\n        fill: true\n      }]\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }) : null;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  }, country ? barChart : lineChart);\n};\n\nexport default Chart;","map":{"version":3,"sources":["/Users/petrafranklin/Coding_DoJo/mern/Assignments/covid_tracker/src/components/Chart/Chart.jsx"],"names":["React","useState","useEffect","fetchDailyData","Line","Bar","styles","Chart","data","confirmed","recovered","deaths","country","dailyData","setDailyData","fetchMyAPI","initialDailyData","barChart","labels","datasets","label","backgroundColor","value","legend","display","title","text","lineChart","map","date","borderColor","fill","container"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,GAAf,QAA0B,iBAA1B;AACA,OAAOC,MAAP,MAAmB,oBAAnB;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA,IAAI,EAAE;AAAEC,IAAAA,SAAF;AAAaC,IAAAA,SAAb;AAAwBC,IAAAA;AAAxB,GAAR;AAA0CC,EAAAA;AAA1C,CAAD,KAAyD;AACnE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMa,UAAU,GAAG,YAAY;AAC/B,YAAMC,gBAAgB,GAAG,MAAMb,cAAc,EAA7C;AACAW,MAAAA,YAAY,CAACE,gBAAD,CAAZ;AACC,KAHD;;AAKAD,IAAAA,UAAU;AACb,GAPQ,EAON,EAPM,CAAT;AASA,QAAME,QAAQ,GACVR,SAAS,gBACL,oBAAC,GAAD;AACI,IAAA,IAAI,EAAE;AACFS,MAAAA,MAAM,EAAE,CAAC,UAAD,EAAY,WAAZ,EAAyB,QAAzB,CADN;AAEFC,MAAAA,QAAQ,EAAE,CAAC;AACPC,QAAAA,KAAK,EAAE,QADA;AAEPC,QAAAA,eAAe,EAAE,CAAC,KAAD,EAAQ,OAAR,EAAgB,MAAhB,CAFV;AAGXb,QAAAA,IAAI,EAAC,CAACC,SAAS,CAACa,KAAX,EAAkBZ,SAAS,CAACY,KAA5B,EAAmCX,MAAM,CAACW,KAA1C;AAHM,OAAD;AAFR,KADV;AAUA,IAAA,OAAO,EAAE;AACLC,MAAAA,MAAM,EAAC;AAAEC,QAAAA,OAAO,EAAC;AAAV,OADF;AAELC,MAAAA,KAAK,EAAE;AAAED,QAAAA,OAAO,EAAC,IAAV;AAAgBE,QAAAA,IAAI,EAAE,oBAAmBd,OAAQ;AAAjD;AAFF,KAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,GAgBL,IAjBR;AAoBA,QAAMe,SAAS,GACXd,SAAS,CAAC,CAAD,CAAT,gBAEI,oBAAC,IAAD;AACA,IAAA,IAAI,EAAE;AACFK,MAAAA,MAAM,EAAEL,SAAS,CAACe,GAAV,CAAc,CAAC;AAAEC,QAAAA;AAAF,OAAD,KAAcA,IAA5B,CADN;AAGFV,MAAAA,QAAQ,EAAE,CAAC;AACPX,QAAAA,IAAI,EAAEK,SAAS,CAACe,GAAV,CAAgBpB,IAAF,IAAYA,IAAI,CAACC,SAA/B,CADC;AAEPW,QAAAA,KAAK,EAAE,UAFA;AAGPC,QAAAA,eAAe,EAAC,KAHT;AAIPS,QAAAA,WAAW,EAAE,OAJN;AAKPC,QAAAA,IAAI,EAAE;AALC,OAAD,EAMP;AACCvB,QAAAA,IAAI,EAAEK,SAAS,CAACe,GAAV,CAAgBpB,IAAF,IAAYA,IAAI,CAACG,MAA/B,CADP;AAECS,QAAAA,KAAK,EAAE,QAFR;AAGCU,QAAAA,WAAW,EAAE,UAHd;AAICT,QAAAA,eAAe,EAAE,UAJlB;AAKCU,QAAAA,IAAI,EAAE;AALP,OANO;AAHR,KADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,GAqBE,IAtBN;AA0BA,sBACI;AAAK,IAAA,SAAS,EAAEzB,MAAM,CAAC0B,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKpB,OAAO,GAAGK,QAAH,GAAcU,SAD1B,CADJ;AAKH,CA/DD;;AAiEA,eAAepB,KAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { fetchDailyData } from '../../api';\nimport { Line, Bar } from 'react-chartjs-2';\nimport styles from \"./Chart.module.css\";\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n    const [dailyData, setDailyData] = useState({});\n\n    useEffect(() => {\n        const fetchMyAPI = async () => {\n        const initialDailyData = await fetchDailyData();\n        setDailyData(initialDailyData);\n        };\n\n        fetchMyAPI();\n    }, []);\n\n    const barChart = (\n        confirmed ? (\n            <Bar\n                data={{\n                    labels: ['Infected','Recovered', 'Deaths'],\n                    datasets: [{\n                        label: 'People',\n                        backgroundColor: [\"red\", \"green\",\"grey\"],\n                    data:[confirmed.value, recovered.value, deaths.value],\n                },\n                ], \n            }}\n            options={{ \n                legend:{ display:false },\n                title: { display:true, text:`Current State in ${country}`},\n            }}\n            />\n        ) : null\n    );\n                \n    const lineChart = (\n        dailyData[0]\n            ? (\n            <Line\n            data={{\n                labels: dailyData.map(({ date }) => date),\n\n                datasets: [{\n                    data: dailyData.map(( data ) => data.confirmed),\n                    label: 'Infected',\n                    backgroundColor:'red',\n                    borderColor: 'black',\n                    fill: true,\n                }, {\n                    data: dailyData.map(( data ) => data.deaths),\n                    label: 'Deaths',\n                    borderColor: 'darkGrey',\n                    backgroundColor: 'darkGrey',\n                    fill: true, \n                },\n            ],\n        }}\n    />) : null\n    );\n\n\n    return (\n        <div className={styles.container}>\n            {country ? barChart : lineChart}\n        </div>\n    );\n};\n\nexport default Chart\n"]},"metadata":{},"sourceType":"module"}